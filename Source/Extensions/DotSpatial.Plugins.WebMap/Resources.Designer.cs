//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotSpatial.Plugins.WebMap {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DotSpatial.Plugins.WebMap.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bing Aerial Map ähnelt.
        /// </summary>
        internal static string BingAerial {
            get {
                return ResourceManager.GetString("BingAerial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bing Hybrid Map ähnelt.
        /// </summary>
        internal static string BingHybrid {
            get {
                return ResourceManager.GetString("BingHybrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bing Street Map ähnelt.
        /// </summary>
        internal static string BingRoads {
            get {
                return ResourceManager.GetString("BingRoads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cascaded:  ähnelt.
        /// </summary>
        internal static string Cascaded {
            get {
                return ResourceManager.GetString("Cascaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Esri Hydro Base Map ähnelt.
        /// </summary>
        internal static string EsriHydroBaseMap {
            get {
                return ResourceManager.GetString("EsriHydroBaseMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Esri World Imagery ähnelt.
        /// </summary>
        internal static string EsriWorldImagery {
            get {
                return ResourceManager.GetString("EsriWorldImagery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Esri World Street Map ähnelt.
        /// </summary>
        internal static string EsriWorldStreetMap {
            get {
                return ResourceManager.GetString("EsriWorldStreetMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Esri World Topo ähnelt.
        /// </summary>
        internal static string EsriWorldTopo {
            get {
                return ResourceManager.GetString("EsriWorldTopo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fixed Height:  ähnelt.
        /// </summary>
        internal static string FixedHeight {
            get {
                return ResourceManager.GetString("FixedHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fixed Width:  ähnelt.
        /// </summary>
        internal static string FixedWidth {
            get {
                return ResourceManager.GetString("FixedWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Google Map ähnelt.
        /// </summary>
        internal static string GoogleMap {
            get {
                return ResourceManager.GetString("GoogleMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Google Terrain ähnelt.
        /// </summary>
        internal static string GoogleTerrain {
            get {
                return ResourceManager.GetString("GoogleTerrain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Online Basemap ähnelt.
        /// </summary>
        internal static string Legend_Title {
            get {
                return ResourceManager.GetString("Legend_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Byte[].
        /// </summary>
        internal static byte[] nodata {
            get {
                object obj = ResourceManager.GetObject("nodata", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        internal static string None {
            get {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NoSubsets:  ähnelt.
        /// </summary>
        internal static string NoSubsets {
            get {
                return ResourceManager.GetString("NoSubsets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opacity:  ähnelt.
        /// </summary>
        internal static string Opacity_Box_Text {
            get {
                return ResourceManager.GetString("Opacity_Box_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change opacity of the basemap layer. ähnelt.
        /// </summary>
        internal static string Opacity_Box_ToolTip {
            get {
                return ResourceManager.GetString("Opacity_Box_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opaque:  ähnelt.
        /// </summary>
        internal static string Opaque {
            get {
                return ResourceManager.GetString("Opaque", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Street Map ähnelt.
        /// </summary>
        internal static string OpenStreetMap {
            get {
                return ResourceManager.GetString("OpenStreetMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Online Basemap ähnelt.
        /// </summary>
        internal static string Panel_Name {
            get {
                return ResourceManager.GetString("Panel_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Queryable:  ähnelt.
        /// </summary>
        internal static string Queryable {
            get {
                return ResourceManager.GetString("Queryable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select CRS to view. ähnelt.
        /// </summary>
        internal static string SelectCrsToView {
            get {
                return ResourceManager.GetString("SelectCrsToView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select layer to view. ähnelt.
        /// </summary>
        internal static string SelectLayerToView {
            get {
                return ResourceManager.GetString("SelectLayerToView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select server to view. ähnelt.
        /// </summary>
        internal static string SelectServerToView {
            get {
                return ResourceManager.GetString("SelectServerToView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change online basemap service. ähnelt.
        /// </summary>
        internal static string Service_Box_ToolTip {
            get {
                return ResourceManager.GetString("Service_Box_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unable to read capabilities: {0} ähnelt.
        /// </summary>
        internal static string UnableToReadCapabilities {
            get {
                return ResourceManager.GetString("UnableToReadCapabilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unsupported CRS. Select another CRS. ähnelt.
        /// </summary>
        internal static string UnsupportedCrs {
            get {
                return ResourceManager.GetString("UnsupportedCrs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WMS ähnelt.
        /// </summary>
        internal static string WMSMap {
            get {
                return ResourceManager.GetString("WMSMap", resourceCulture);
            }
        }
    }
}
